# Generated by Django 4.2 on 2023-06-29 11:10

from django.db import migrations, models
import taggit.managers
import versatileimagefield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0005_auto_20220424_2025'),
    ]

    operations = [
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(help_text='The Blog Title', max_length=100)),
                ('short_description', models.CharField(blank=True, help_text="Blog's Short Description", max_length=100, null=True)),
                ('description', models.TextField(help_text='Blog Content', max_length=10000)),
                ('featured_image_mobile', versatileimagefield.fields.VersatileImageField(help_text='Background image for mobile', upload_to='', verbose_name='Thumbnail Image Mobile')),
                ('featured_image_desktop', versatileimagefield.fields.VersatileImageField(help_text='Background image for desktop', upload_to='', verbose_name='Thumbnail Image Desktop')),
                ('main_image_mobile', versatileimagefield.fields.VersatileImageField(blank=True, help_text='Main image for mobile', null=True, upload_to='', verbose_name='Main Image Mobile')),
                ('main_image_desktop', versatileimagefield.fields.VersatileImageField(blank=True, help_text='Main image for desktop', null=True, upload_to='', verbose_name='Main Image Desktop')),
                ('published_at', models.DateField(auto_now_add=True, help_text='Published Date')),
                ('read_time', models.PositiveIntegerField(default=0, help_text='The Blog read time automatically calculated after save')),
                ('is_featured', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('sort_order', models.PositiveIntegerField(help_text='List the Blogs based on sort order')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'ordering': ('sort_order',),
                'unique_together': {('is_featured', 'sort_order')},
            },
        ),
    ]
